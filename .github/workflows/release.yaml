name: Release

on:
  workflow_dispatch:

jobs:
  release:
    name: üì¶ Publish release
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2

      - id: get-version
        run: echo "::set-output name=version::$(cat VERSION)"

      - name: Build
        run: |
          make build
          zip app.zip build/app

      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: v${{ steps.get-version.outputs.version }}
          draft: true
          prerelease: false

      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app.zip
          asset_name: app-${{ steps.get-version.outputs.version }}.tgz
          asset_content_type: application/zip

      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}

  repository-release:
    name: üì¶ Publish image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - id: get-version
        run: echo "::set-output name=version::$(cat VERSION)"

      - name: ‚öôÔ∏è Build image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: go-template
          tags: >
            latest
            ${{ steps.get-version.outputs.version }}
            ${{ steps.get-version.outputs.version }}-${{ github.sha }}
          dockerfiles: |
            ./Dockerfile

      - name: üõ≥Ô∏è Push To ghcr.io
        id: push-to-ghcr
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          extra-args: |
            --disable-content-trust

      - name: Print image url
        run: echo "${{ toJSON(steps.push.outputs) }}"